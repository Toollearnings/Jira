/* 
Groovy Script for transition : Change App Owner
This script will triiger Bamboo plan which will Change owner of the application to the current jira assignee
*/

package com.onresolve.jira.groovy.canned.workflow.postfunctions

import com.atlassian.jira.component.ComponentAccessor;
import com.atlassian.jira.issue.CustomFieldManager;
import com.atlassian.jira.issue.fields.CustomField;
import com.atlassian.jira.issue.Issue;
import com.atlassian.jira.issue.MutableIssue;
import com.atlassian.jira.issue.IssueManager;
import com.atlassian.jira.issue.resolution.Resolution;
import com.atlassian.jira.issue.ModifiedValue;
import com.atlassian.jira.issue.util.DefaultIssueChangeHolder;
import org.apache.commons.codec.binary.Base64;
import com.atlassian.jira.bc.issue.IssueService;
import com.atlassian.jira.issue.IssueInputParameters;
import com.atlassian.jira.issue.customfields.manager.OptionsManager;
import com.atlassian.jira.issue.customfields.option.Options;
import com.atlassian.jira.event.type.EventDispatchOption;
import java.util.Collections;
import java.util.List;
import java.net.URLEncoder;

def projectKey= 'EQS';
def buildKey= 'CAO';

def requestMethod = 'POST';
def URLParam = []

Issue parentIssue = issue

def jira_issue_id = issue.getKey()

def customFieldManager = ComponentAccessor.getCustomFieldManager()
//get App Name
def appNameCF = customFieldManager.getCustomFieldObjectByName("App_Name");
def appName_with_spaces = parentIssue.getCustomFieldValue(appNameCF)

def appName = appName_with_spaces;
def publish_AppName = appName;

// get Business Domain Name
def businessDomainCF = customFieldManager.getCustomFieldObjectByName("Business_Domain");
def String businessDomain = parentIssue.getCustomFieldValue(businessDomainCF)

def cf_EQS_App_Asset = customFieldManager.getCustomFieldObjectByName("App Asset");
def str_EQS_App_Asset = parentIssue.getCustomFieldValue(cf_EQS_App_Asset)

//-------------- PROD -------------------------------------------------------------------------
//def baseURL = "https://bamboo.service./rest/api/latest/queue/$projectKey-$buildKey";
//String authStringEnc = "QVVDRFhRbGlrYXBwZHNhOjkzZnpZSzU1OWZDa3Q2N04=";  // AUCDXQlikappdsa
//-------------- QA ----------------------------------------------------------------------------
def baseURL = "https://bamboo.service./rest/api/latest/queue/$projectKey-$buildKey";
String authStringEnc = "QVVDRFhRbGlrYXBwZHNhOjkzZnpZSzU1OWZDa3Q2N04="; //AUCDXQlikappdsa
//----------------------------------------------------------------------------------------------

def ToStream = businessDomain

URLParam = ['bamboo.variable.AppName': URLEncoder.encode(appName, "UTF-8"), 
			'bamboo.variable.JiraIssueID': jira_issue_id, 
			'bamboo.variable.businessDomain': URLEncoder.encode(businessDomain, "UTF-8"), 
			'bamboo.variable.App_Asset_ID': str_EQS_App_Asset, 
			'bamboo.variable.publish_AppName': URLEncoder.encode(publish_AppName, "UTF-8"), 
			'bamboo.variable.ToStream': URLEncoder.encode(businessDomain, "UTF-8"), 
			'bamboo.variable.targetSite': "DomainConsumption"
			];

def query = URLParam.collect { it }.join('&');
URL url;

url = new java.net.URL(baseURL + "?" + query);

URLConnection connection = url.openConnection();
connection.setRequestProperty("Authorization", "Basic " + authStringEnc);
connection.setRequestMethod(requestMethod);
connection.setRequestProperty("Content-Type", "application/xml");
connection.setRequestProperty("Accept", "application/xml");
connection.connect();
println("status:" + connection.getResponseCode())
println("status:" + connection.getResponseMessage())
connection.getContent()